/* Advanced Animations and Effects */

/* 3D Card Transform Effect */
.card-3d {
    perspective: 1000px;
    transform-style: preserve-3d;
}

.card-3d-inner {
    position: relative;
    width: 100%;
    height: 100%;
    transition: transform 0.8s cubic-bezier(0.2, 0.8, 0.2, 1);
}

.card-3d:hover .card-3d-inner {
    transform: rotateY(10deg) rotateX(5deg);
}

/* Particle Background */
.particle-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 0;
}

.particle {
    position: absolute;
    background: var(--color-primary);
    border-radius: 50%;
    opacity: 0.3;
    animation: float 20s infinite;
}

@keyframes float {
    0%, 100% {
        transform: translateY(0) translateX(0);
    }
    25% {
        transform: translateY(-30px) translateX(20px);
    }
    50% {
        transform: translateY(-15px) translateX(-20px);
    }
    75% {
        transform: translateY(30px) translateX(10px);
    }
}

/* Magnetic Button Effect */
.magnetic-button {
    position: relative;
    transition: transform 0.3s cubic-bezier(0.2, 0.8, 0.2, 1);
}

/* Glitch Effect */
.glitch {
    position: relative;
    animation: glitch 1s infinite;
}

.glitch::before,
.glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    clip: rect(0, 900px, 0, 0);
}

.glitch::before {
    text-shadow: -1px 0 var(--color-primary);
    animation: glitch-anim 2s infinite linear alternate-reverse;
}

.glitch::after {
    text-shadow: 1px 0 var(--color-secondary);
    animation: glitch-anim2 3s infinite linear alternate-reverse;
}

@keyframes glitch-anim {
    0% {
        clip: rect(36px, 900px, 48px, 0);
    }
    20% {
        clip: rect(12px, 900px, 24px, 0);
    }
    40% {
        clip: rect(64px, 900px, 76px, 0);
    }
    60% {
        clip: rect(28px, 900px, 40px, 0);
    }
    80% {
        clip: rect(92px, 900px, 104px, 0);
    }
    100% {
        clip: rect(48px, 900px, 60px, 0);
    }
}

/* Liquid Button Effect */
.liquid-button {
    position: relative;
    padding: 1rem 2rem;
    background: none;
    border: none;
    color: var(--color-text);
    cursor: pointer;
    overflow: hidden;
}

.liquid-button::before {
    content: '';
    position: absolute;
    top: var(--y, 50%);
    left: var(--x, 50%);
    width: 0;
    height: 0;
    border-radius: 50%;
    background: var(--color-primary);
    transform: translate(-50%, -50%);
    transition: width 0.6s, height 0.6s;
}

.liquid-button:hover::before {
    width: 300px;
    height: 300px;
}

/* Typing Animation */
.typing {
    border-right: 2px solid var(--color-primary);
    animation: typing 3.5s steps(40, end), blink-caret 0.75s step-end infinite;
    white-space: nowrap;
    overflow: hidden;
}

@keyframes typing {
    from { width: 0 }
    to { width: 100% }
}

@keyframes blink-caret {
    from, to { border-color: transparent }
    50% { border-color: var(--color-primary) }
}

/* Spotlight Effect */
.spotlight {
    position: relative;
    overflow: hidden;
}

.spotlight::before {
    content: '';
    position: absolute;
    top: var(--y, 0);
    left: var(--x, 0);
    width: 100px;
    height: 100px;
    background: radial-gradient(circle, 
        rgba(255, 255, 255, 0.2) 0%,
        transparent 70%);
    transform: translate(-50%, -50%);
    pointer-events: none;
}

/* Parallax Scrolling */
.parallax {
    transform: translateY(var(--scroll-y, 0));
    transition: transform 0.1s cubic-bezier(0.2, 0.8, 0.2, 1);
    will-change: transform;
}

/* Wave Animation */
.wave-border {
    position: relative;
    overflow: hidden;
}

.wave-border::before {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    bottom: -10px;
    height: 10px;
    background: linear-gradient(90deg,
        transparent,
        var(--color-primary),
        transparent
    );
    animation: wave 2s infinite linear;
}

@keyframes wave {
    0% {
        transform: translateX(-100%);
    }
    100% {
        transform: translateX(100%);
    }
}

/* Morphing Background */
.morphing-bg {
    background: linear-gradient(
        45deg,
        var(--color-primary),
        var(--color-secondary)
    );
    background-size: 400% 400%;
    animation: morphing 15s ease infinite;
}

@keyframes morphing {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

/* Neon Text Effect */
.neon-text {
    color: #fff;
    text-shadow:
        0 0 5px var(--color-primary),
        0 0 10px var(--color-primary),
        0 0 20px var(--color-primary),
        0 0 40px var(--color-primary);
    animation: neon 1.5s ease-in-out infinite alternate;
}

@keyframes neon {
    from {
        text-shadow:
            0 0 5px var(--color-primary),
            0 0 10px var(--color-primary),
            0 0 20px var(--color-primary),
            0 0 40px var(--color-primary);
    }
    to {
        text-shadow:
            0 0 2px var(--color-primary),
            0 0 5px var(--color-primary),
            0 0 10px var(--color-primary),
            0 0 20px var(--color-primary);
    }
}

/* Split Text Reveal */
.split-reveal {
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.8s cubic-bezier(0.2, 0.8, 0.2, 1);
}

.split-reveal.visible {
    opacity: 1;
    transform: translateY(0);
}

.split-reveal .char {
    display: inline-block;
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.3s cubic-bezier(0.2, 0.8, 0.2, 1);
}

.split-reveal.visible .char {
    opacity: 1;
    transform: translateY(0);
}

/* Interactive Card Stack */
.card-stack {
    position: relative;
    perspective: 1000px;
}

.card-stack-item {
    position: absolute;
    width: 100%;
    transition: all 0.5s cubic-bezier(0.2, 0.8, 0.2, 1);
}

.card-stack:hover .card-stack-item:nth-child(1) {
    transform: translateY(-10px) rotateX(10deg);
}

.card-stack:hover .card-stack-item:nth-child(2) {
    transform: translateY(0) rotateX(5deg);
}

.card-stack:hover .card-stack-item:nth-child(3) {
    transform: translateY(10px) rotateX(0deg);
}

/* Shimmering Text */
.shimmer-text {
    background: linear-gradient(
        90deg,
        var(--color-text) 0%,
        var(--color-primary) 50%,
        var(--color-text) 100%
    );
    background-size: 200% auto;
    color: transparent;
    -webkit-background-clip: text;
    background-clip: text;
    animation: shimmer 3s linear infinite;
}

@keyframes shimmer {
    to {
        background-position: 200% center;
    }
}

/* SVG Path Animation */
.path-animation path {
    stroke-dasharray: 1000;
    stroke-dashoffset: 1000;
    animation: draw 2s ease forwards;
}

@keyframes draw {
    to {
        stroke-dashoffset: 0;
    }
}